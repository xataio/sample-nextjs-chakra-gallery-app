// Generated by Xata Codegen 0.25.1. Please do not edit.
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client';
import { buildClient } from '@xata.io/client';

const tables = [
  {
    name: 'galleries',
    columns: [
      { name: 'images', type: 'file[]' },
      { name: 'name', type: 'string', notNull: true, defaultValue: 'Gallery' }
    ]
  }
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Galleries = InferredTypes['galleries'];
export type GalleriesRecord = Galleries & XataRecord;

export type DatabaseSchema = {
  galleries: GalleriesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: 'https://Dave-Snider-s-workspace-pghsjs.us-east-1.xata.sh/db/images'
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
